import { showNotification } from './uiHelpers.js';
import { posts } from './blogManager.js';
import { RealisticSeoAnalyzer } from './seoAnalyzer.js';
import { Gemini20FlashEngine } from './geminiAI.js';
import { API_BASE } from '../config.js';

// ===== STEP 1: CONFIGURATIONS =====
// const GEMINI_CONFIG = { apiKey: 'xxx', ... } // <-- ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏™‡πà apiKey ‡πÉ‡∏ô frontend
const GEMINI_CONFIG = {
    model: 'gemini-2.5-flash',
    maxTokens: 2048,
    temperature: 0.3,
    enabled: true,
    rateLimits: {
        requestsPerMinute: 60,
        requestsPerDay: 1500
    },
    baseURL: 'https://generativelanguage.googleapis.com/v1/models/gemini-2.5-flash:generateContent'
};

// ===== GLOBAL VARIABLES =====
let seoSettings = JSON.parse(localStorage.getItem('seoSettings')) || {};

// ===== STEP 2: HELPER INSTANCES =====
const seoAnalyzer = new RealisticSeoAnalyzer();
const geminiAI = new Gemini20FlashEngine(GEMINI_CONFIG);

export async function runGeminiSeoCheck() {
    try {
        const postId = document.getElementById('postSelectForSeo').value;
        if (!postId) {
            showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', 'error');
            return;
        }
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå SEO...', 'info');        // Get posts from API or global scope
        let post = null;
        if (window.posts && Array.isArray(window.posts)) {
            // Try different ID matching strategies
            post = window.posts.find(p => {
                // Check multiple possible ID fields and data types
                return p.id == postId || 
                       p._id == postId || 
                       p.postId == postId || 
                       p.slug == postId ||
                       String(p.id) === String(postId);
            });
        }
        
        // If post not found in window.posts, try to fetch from API
        if (!post) {
            try {
                const { API_BASE } = await import('../config.js');
                const response = await fetch(`${API_BASE}/posts`);
                if (response.ok) {
                    const postsData = await response.json();
                    if (Array.isArray(postsData)) {
                        post = postsData.find(p => {
                            return p.id == postId || 
                                   p._id == postId || 
                                   p.postId == postId || 
                                   p.slug == postId ||
                                   String(p.id) === String(postId);
                        });
                        // Also update window.posts for future use
                        window.posts = postsData;
                    }
                }
            } catch (fetchError) {
                console.error('Error fetching posts:', fetchError);
            }
        }
        
        if (!post) {
            console.warn('Post not found. postId:', postId, 'Available posts:', window.posts?.length || 0);
            console.warn('Available post IDs:', window.posts?.map(p => ({ id: p.id, _id: p._id, slug: p.slug })) || []);
            throw new Error(`‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (ID: ${postId})`);
        }
        const analysis = seoAnalyzer.analyzePost(post);
        const aiResult = await geminiAI.generateRealAISuggestions(post, analysis);

        // Show modal with AI result
        let html = '';
        if (aiResult.improvements && aiResult.improvements.length > 0) {
            html += `<div><b>‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞:</b><ul style="margin:10px 0 0 18px;">`;
            aiResult.improvements.forEach(imp => {
                html += `<li>
                    <b>[${imp.type}]</b> ${imp.issue}<br>
                    <span style="color:#888;">‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</span> ${imp.current}<br>
                    <span style="color:#28a745;">‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</span> <b>${imp.suggested}</b><br>
                    <span style="color:#ffc107;">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:</span> ${imp.reason}
                </li>`;
            });
            html += `</ul></div>`;
        }
        if (aiResult.contentSuggestions && aiResult.contentSuggestions.length > 0) {
            html += `<div style="margin-top:10px;"><b>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°:</b><ul style="margin:10px 0 0 18px;">`;
            aiResult.contentSuggestions.forEach(s => {
                html += `<li>${s}</li>`;
            });
            html += `</ul></div>`;
        }
        if (aiResult.technicalSEO && aiResult.technicalSEO.length > 0) {
            html += `<div style="margin-top:10px;"><b>‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ SEO:</b><ul style="margin:10px 0 0 18px;">`;
            aiResult.technicalSEO.forEach(s => {
                html += `<li>${s}</li>`;
            });
            html += `</ul></div>`;
        }
        if (aiResult.summary) {
            html += `<div style="margin-top:10px;"><b>‡∏™‡∏£‡∏∏‡∏õ:</b> ${aiResult.summary}</div>`;
        }
        showReusableModal('geminiSeoReportModal', html || '<div style="padding:20px;">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</div>', '<i class="fas fa-brain"></i> ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô Flash AI SEO');
        showNotification('‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå SEO ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
    } catch (error) {
        console.error('Error running SEO check:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', 'error');
    }
}

export async function researchKeywords() {
    try {
        const keyword = document.getElementById('keywordInput').value;
        if (!keyword) {
            showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ keyword ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', 'error');
            return;
        }

        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå keywords ‡∏î‡πâ‡∏ß‡∏¢ Flash AI...', 'info');
          // Get API key for Gemini
        let apiKey = '';
        try {
            const { authenticatedFetch } = await import('./auth.js');
            const resKey = await authenticatedFetch(`${API_BASE}/apikey`);
            if (resKey.ok) {
                const data = await resKey.json();
                apiKey = data.data?.geminiApiKey || '';
                // API key fetched successfully
            }
        } catch (error) {
            console.error('Error fetching API key:', error);
        }

        let keywordResults = null;

        // Try to get real AI analysis if API key is available
        if (apiKey) {
            try {
                const prompt = `
                ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞ SEO Expert ‡πÇ‡∏õ‡∏£‡∏î‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå keyword "${keyword}" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°:

                1. ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (Related Keywords) 10 ‡∏Ñ‡∏≥
                2. ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ö‡∏ö Long-tail 5 ‡∏Ñ‡∏≥
                3. ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏Ç‡πà‡∏á 5 ‡∏Ñ‡∏≥
                4. ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å (Difficulty): Easy/Medium/Hard
                5. ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: High/Medium/Low
                6. Search Intent: Informational/Commercial/Navigational/Transactional
                7. ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå SEO

                ‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON:
                {
                    "mainKeyword": "${keyword}",
                    "difficulty": "Medium",
                    "searchVolume": "Medium",
                    "searchIntent": "Informational",
                    "relatedKeywords": ["‡∏Ñ‡∏≥1", "‡∏Ñ‡∏≥2", "‡∏Ñ‡∏≥3"],
                    "longTailKeywords": ["‡∏Ñ‡∏≥‡∏¢‡∏≤‡∏ß1", "‡∏Ñ‡∏≥‡∏¢‡∏≤‡∏ß2"],
                    "competitorKeywords": ["‡∏Ñ‡∏≥‡∏Ñ‡∏π‡πà‡πÅ‡∏Ç‡πà‡∏á1", "‡∏Ñ‡∏≥‡∏Ñ‡∏π‡πà‡πÅ‡∏Ç‡πà‡∏á2"],
                    "seoStrategy": ["‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå1", "‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå2", "‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå3"]
                }
                `;

                const url = 'https://generativelanguage.googleapis.com/v1/models/gemini-2.5-flash:generateContent?key=' + encodeURIComponent(apiKey);
                const response = await fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        contents: [{ parts: [{ text: prompt }] }],
                        generationConfig: {
                            temperature: 0.3,
                            topK: 40,
                            topP: 0.95,
                            maxOutputTokens: 2048
                        }
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    const aiContent = data?.candidates?.[0]?.content?.parts?.[0]?.text || '';
                    
                    // Try to parse JSON from AI response
                    const jsonMatch = aiContent.match(/\{[\s\S]*\}/);
                    if (jsonMatch) {
                        keywordResults = JSON.parse(jsonMatch[0]);
                    }
                }
            } catch (aiError) {
                console.error('AI Analysis failed:', aiError);
            }
        }

        // Fallback to simulated results if AI fails
        if (!keywordResults) {
            keywordResults = generateFallbackKeywordResults(keyword);
        }

        // Display results in modal
        displayKeywordResults(keywordResults);
        showNotification('‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå keywords ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
    } catch (error) {
        console.error('Error researching keywords:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', 'error');
    }
}

function generateFallbackKeywordResults(keyword) {
    const baseKeywords = [
        `${keyword} ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£`,
        `${keyword} ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ`,
        `${keyword} ‡∏£‡∏≤‡∏Ñ‡∏≤`,
        `${keyword} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß`,
        `${keyword} ‡∏Ç‡∏≤‡∏¢`,
        `${keyword} ‡∏î‡∏µ‡πÑ‡∏´‡∏°`,
        `${keyword} 2024`,
        `${keyword} ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥`,
        `${keyword} ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö`,
        `${keyword} ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå`
    ];

    const longTailKeywords = [
        `‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å${keyword}‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î`,
        `${keyword}‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà`,
        `${keyword}‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ`,
        `${keyword}‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡πÑ‡∏´‡∏ô‡∏î‡∏µ`,
        `‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ${keyword}‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô`
    ];

    const competitorKeywords = [
        `${keyword} vs ‡∏Ñ‡∏π‡πà‡πÅ‡∏Ç‡πà‡∏á`,
        `‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á${keyword}`,
        `${keyword} ‡∏´‡∏£‡∏∑‡∏≠ ‡∏≠‡∏∑‡πà‡∏ô‡πÜ`,
        `‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö${keyword}`,
        `${keyword} ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ`
    ];

    return {
        mainKeyword: keyword,
        difficulty: ['Easy', 'Medium', 'Hard'][Math.floor(Math.random() * 3)],
        searchVolume: ['Low', 'Medium', 'High'][Math.floor(Math.random() * 3)],
        searchIntent: ['Informational', 'Commercial', 'Navigational', 'Transactional'][Math.floor(Math.random() * 4)],
        relatedKeywords: baseKeywords.slice(0, 10),
        longTailKeywords: longTailKeywords,
        competitorKeywords: competitorKeywords,
        seoStrategy: [
            '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á',
            '‡πÉ‡∏ä‡πâ keyword ‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤',
            '‡∏™‡∏£‡πâ‡∏≤‡∏á backlink ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û',
            '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á page speed',
            '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á'
        ]
    };
}

function displayKeywordResults(results) {
    let modal = document.getElementById('keywordResultsModal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'keywordResultsModal';
        modal.className = 'modal';
        document.body.appendChild(modal);
    }

    const modalContent = `
        <div class="modal-content" style="max-width: 800px;">
            <div class="modal-header">
                <h3><i class="fas fa-search"></i> Flash Keywords Research: ${results.mainKeyword}</h3>
                <button class="modal-close" onclick="closeModal('keywordResultsModal')">&times;</button>
            </div>
            <div class="modal-body">
                <div class="keyword-analysis-grid" style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                    <div class="analysis-card">
                        <h4>üìä Keyword Metrics</h4>
                        <div class="metric-item">
                            <strong>Difficulty:</strong> 
                            <span class="badge ${results.difficulty.toLowerCase()}">${results.difficulty}</span>
                        </div>
                        <div class="metric-item">
                            <strong>Search Volume:</strong> 
                            <span class="badge ${results.searchVolume.toLowerCase()}">${results.searchVolume}</span>
                        </div>
                        <div class="metric-item">
                            <strong>Search Intent:</strong> 
                            <span class="badge">${results.searchIntent}</span>
                        </div>
                    </div>
                    <div class="analysis-card">
                        <h4>üéØ SEO Strategy</h4>
                        <ul style="margin: 0; padding-left: 18px;">
                            ${results.seoStrategy.map(strategy => `<li>${strategy}</li>`).join('')}
                        </ul>
                    </div>
                </div>
                
                <div class="keywords-section">
                    <h4>üîç Related Keywords</h4>
                    <div class="keyword-tags">
                        ${results.relatedKeywords.map(kw => `<span class="keyword-tag">${kw}</span>`).join('')}
                    </div>
                </div>
                
                <div class="keywords-section">
                    <h4>üìù Long-tail Keywords</h4>
                    <div class="keyword-tags">
                        ${results.longTailKeywords.map(kw => `<span class="keyword-tag long-tail">${kw}</span>`).join('')}
                    </div>
                </div>
                
                <div class="keywords-section">
                    <h4>üèÜ Competitor Keywords</h4>
                    <div class="keyword-tags">
                        ${results.competitorKeywords.map(kw => `<span class="keyword-tag competitor">${kw}</span>`).join('')}
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button onclick="exportKeywordResults('${results.mainKeyword}')" class="btn btn-primary">
                    <i class="fas fa-download"></i> Export Results
                </button>
                <button onclick="closeModal('keywordResultsModal')" class="btn btn-secondary">‡∏õ‡∏¥‡∏î</button>
            </div>
        </div>
    `;

    modal.innerHTML = modalContent;
    modal.style.display = 'block';

    // Add CSS for keyword display
    if (!document.getElementById('keywordResultsCSS')) {
        const style = document.createElement('style');
        style.id = 'keywordResultsCSS';
        style.textContent = `
            .keyword-analysis-grid .analysis-card {
                background: #f8f9fa;
                padding: 15px;
                border-radius: 8px;
                border: 1px solid #e9ecef;
            }
            .metric-item {
                margin: 8px 0;
            }
            .badge {
                background: #007bff;
                color: white;
                padding: 2px 8px;
                border-radius: 12px;
                font-size: 12px;
            }
            .badge.easy { background: #28a745; }
            .badge.medium { background: #ffc107; color: #000; }
            .badge.hard { background: #dc3545; }
            .badge.low { background: #6c757d; }
            .badge.high { background: #28a745; }
            .keywords-section {
                margin: 20px 0;
            }
            .keyword-tags {
                display: flex;
                flex-wrap: wrap;
                gap: 8px;
                margin-top: 10px;
            }
            .keyword-tag {
                background: #e9ecef;
                padding: 4px 8px;
                border-radius: 4px;
                font-size: 14px;
                cursor: pointer;
                transition: background 0.2s;
            }
            .keyword-tag:hover {
                background: #007bff;
                color: white;
            }
            .keyword-tag.long-tail {
                background: #28a745;
                color: white;
            }
            .keyword-tag.competitor {
                background: #ffc107;
                color: #000;
            }
        `;
        document.head.appendChild(style);
    }
}

// Export keyword results function
window.exportKeywordResults = function(keyword) {
    const modal = document.getElementById('keywordResultsModal');
    if (modal) {
        const keywords = Array.from(modal.querySelectorAll('.keyword-tag')).map(tag => tag.textContent);
        const csvContent = `Keyword Research Results for: ${keyword}\n\n` + 
                          keywords.map(kw => `"${kw}"`).join('\n');
        
        const blob = new Blob([csvContent], { type: 'text/csv' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `keywords-${keyword}-${new Date().toISOString().split('T')[0]}.csv`;
        a.click();
        window.URL.revokeObjectURL(url);
        
        showNotification('‚úÖ Export keywords ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
    }
};

export async function generateSitemap() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á sitemap...', 'info');
        const lastUpdate = document.getElementById('sitemapLastUpdate');
        if (lastUpdate) {
            lastUpdate.textContent = new Date().toLocaleString();
        }
        showNotification('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á sitemap ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
    } catch (error) {
        console.error('Error generating sitemap:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á sitemap', 'error');
    }
}

export async function validateSchema() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Schema...', 'info');
        await new Promise(resolve => setTimeout(resolve, 1000));
        showNotification('‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Schema ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
    } catch (error) {
        console.error('Error validating schema:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö', 'error');
    }
}

export async function runSpeedTest() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß...', 'info');
        const speedScore = document.getElementById('pageSpeed');
        const vitals = document.getElementById('coreWebVitals');

        if (speedScore) speedScore.textContent = '95';
        if (vitals) vitals.textContent = 'Good';

        showNotification('‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
    } catch (error) {
        console.error('Error running speed test:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö', 'error');
    }
}

export function optimizationTips() {
    let modal = document.getElementById('optimizationTipsModal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'optimizationTipsModal';
        modal.className = 'modal';
        modal.innerHTML = `
            <div class="modal-content" style="max-width:500px;">
                <div class="modal-header">
                    <h3><i class="fas fa-lightbulb"></i> Flash Tips</h3>
                    <button class="modal-close" onclick="closeModal('optimizationTipsModal')">&times;</button>
                </div>
                <div class="modal-body">
                    <ul style="padding-left:18px;">
                        <li>‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ WebP</li>
                        <li>‡πÉ‡∏ä‡πâ Lazy Load ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠</li>
                        <li>‡∏•‡∏î JavaScript ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</li>
                        <li>‡πÉ‡∏ä‡πâ CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö static assets</li>
                        <li>‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ browser cache</li>
                        <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Core Web Vitals</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" onclick="closeModal('optimizationTipsModal')">‡∏õ‡∏¥‡∏î</button>
                </div>
            </div>
        `;
        document.body.appendChild(modal);
    }
    modal.style.display = 'flex';
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á modal ‡πÅ‡∏ö‡∏ö reusable
 * @param {string} modalId
 * @param {string} htmlBody
 * @param {string} title
 */
function showReusableModal(modalId, htmlBody, title = '') {
    let modal = document.getElementById(modalId);
    if (!modal) {
        modal = document.createElement('div');
        modal.id = modalId;
        modal.className = 'modal';
        modal.innerHTML = `
            <div class="modal-content" style="max-width:600px;">
                <div class="modal-header">
                    <h3>${title}</h3>
                    <button class="modal-close" onclick="closeModal('${modalId}')">&times;</button>
                </div>
                <div class="modal-body" id="${modalId}Body"></div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" onclick="closeModal('${modalId}')">‡∏õ‡∏¥‡∏î</button>
                </div>
            </div>
        `;
        document.body.appendChild(modal);
    }
    document.getElementById(`${modalId}Body`).innerHTML = htmlBody;
    modal.style.display = 'flex';
}

/**
 * Populate SEO article select dropdown
 */
export function populateSEOArticleSelect() {
    const postSelect = document.getElementById('postSelectForSeo');
    if (!postSelect) return;
    
    // Get posts from window.posts or fetch from API
    let postsToUse = [];
    if (window.posts && Array.isArray(window.posts)) {
        postsToUse = window.posts;
    } else if (posts && Array.isArray(posts)) {
        postsToUse = posts;
        window.posts = posts; // Also set window.posts for consistency
    }
    
    if (postsToUse.length === 0) {
        postSelect.innerHTML = '<option value="">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°</option>';
        return;
    }
    
    postSelect.innerHTML = `
        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå</option>
        ${postsToUse.map(post => {
            const postId = post.id || post._id || post.postId || post.slug;
            const title = post.titleTH || post.titleth || post.title || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠';
            return `<option value="${postId}">${title}</option>`;
        }).join('')}
    `;
}

// Make function available globally
window.populateSEOArticleSelect = populateSEOArticleSelect;

// ===== MISSING SEO TOOLS FUNCTIONS =====

/**
 * Auto-generate SEO content for current post
 */
export async function autoGenerateSEO() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á SEO ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...', 'info');
          const postId = document.getElementById('postSelectForSeo')?.value;
        if (!postId) {
            showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á SEO', 'error');
            return;
        }

        const post = posts.find(p => {
            return p.id == postId || 
                   p._id == postId || 
                   p.postId == postId || 
                   p.slug == postId ||
                   String(p.id) === String(postId);
        });
        if (!post) {
            showNotification('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å', 'error');
            return;
        }

        // Generate SEO content using Gemini AI
        const seoContent = await geminiAI.generateSEOContent(post);
        
        // Update post with generated SEO content
        if (seoContent.title) post.title = seoContent.title;
        if (seoContent.metaDescription) post.metaDescription = seoContent.metaDescription;
        if (seoContent.keywords) post.keywords = seoContent.keywords;

        showNotification('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á SEO ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        // Show results in modal
        showReusableModal('autoSeoModal', `
            <div>
                <h4>SEO ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà:</h4>
                <p><strong>Title:</strong> ${seoContent.title || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á'}</p>
                <p><strong>Meta Description:</strong> ${seoContent.metaDescription || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á'}</p>
                <p><strong>Keywords:</strong> ${seoContent.keywords || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á'}</p>
            </div>
        `, '<i class="fas fa-magic"></i> Auto-Generated SEO');

    } catch (error) {
        console.error('Error auto-generating SEO:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á SEO', 'error');
    }
}

/**
 * Run comprehensive SEO check
 */
export async function runSEOCheck() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SEO...', 'info');
          const postId = document.getElementById('postSelectForSeo')?.value;
        if (!postId) {
            showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö', 'error');
            return;
        }

        const post = posts.find(p => {
            return p.id == postId || 
                   p._id == postId || 
                   p.postId == postId || 
                   p.slug == postId ||
                   String(p.id) === String(postId);
        });
        if (!post) {
            showNotification('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å', 'error');
            return;
        }

        // Run comprehensive SEO analysis
        const analysis = seoAnalyzer.analyzePost(post);
        const score = analysis.overallScore || 0;
        
        let issues = [];
        if (analysis.titleIssues?.length) issues.push(...analysis.titleIssues);
        if (analysis.metaIssues?.length) issues.push(...analysis.metaIssues);
        if (analysis.contentIssues?.length) issues.push(...analysis.contentIssues);

        showNotification('‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SEO ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        // Show results
        showReusableModal('seoCheckModal', `
            <div>
                <h4>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô SEO: ${score}/100</h4>
                ${issues.length > 0 ? `
                    <h5>‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö:</h5>
                    <ul>
                        ${issues.map(issue => `<li>${issue}</li>`).join('')}
                    </ul>
                ` : '<p style="color: green;">‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ SEO</p>'}
            </div>
        `, '<i class="fas fa-search"></i> SEO Check Results');

    } catch (error) {
        console.error('Error running SEO check:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SEO', 'error');
    }
}

/**
 * View detailed SEO report
 */
export async function viewSEOReport() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô SEO...', 'info');
          const postId = document.getElementById('postSelectForSeo')?.value;
        if (!postId) {
            showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 'error');
            return;
        }

        const post = posts.find(p => {
            return p.id == postId || 
                   p._id == postId || 
                   p.postId == postId || 
                   p.slug == postId ||
                   String(p.id) === String(postId);
        });
        if (!post) {
            showNotification('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å', 'error');
            return;
        }

        const analysis = seoAnalyzer.analyzePost(post);
        
        showNotification('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô SEO ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        // Show detailed report
        showReusableModal('seoReportModal', `
            <div>
                <h4>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô SEO ‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h4>
                <div style="margin: 10px 0;">
                    <strong>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°:</strong> ${analysis.overallScore || 0}/100
                </div>
                <div style="margin: 10px 0;">
                    <strong>Title SEO:</strong> ${analysis.titleScore || 0}/100
                </div>
                <div style="margin: 10px 0;">
                    <strong>Meta Description:</strong> ${analysis.metaScore || 0}/100
                </div>
                <div style="margin: 10px 0;">
                    <strong>Content SEO:</strong> ${analysis.contentScore || 0}/100
                </div>
                <div style="margin: 10px 0;">
                    <strong>Technical SEO:</strong> ${analysis.technicalScore || 0}/100
                </div>
                <hr>
                <h5>‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞:</h5>
                <ul>
                    <li>‡πÉ‡∏ä‡πâ keywords ‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</li>
                    <li>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á</li>
                    <li>‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á meta description ‡πÉ‡∏´‡πâ‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à</li>
                    <li>‡πÉ‡∏ä‡πâ header tags (H1, H2, H3) ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°</li>
                </ul>
            </div>
        `, '<i class="fas fa-chart-line"></i> SEO Report');

    } catch (error) {
        console.error('Error viewing SEO report:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 'error');
    }
}

/**
 * View sitemap
 */
export async function viewSitemap() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î sitemap...', 'info');
        
        // Generate sitemap from posts
        const sitemapEntries = posts.map(post => ({
            url: `/posts/${post.slug || post.id}`,
            lastmod: post.updatedAt || post.createdAt || new Date().toISOString(),
            changefreq: 'weekly',
            priority: '0.8'
        }));

        // Add static pages
        sitemapEntries.unshift(
            { url: '/', lastmod: new Date().toISOString(), changefreq: 'daily', priority: '1.0' },
            { url: '/about', lastmod: new Date().toISOString(), changefreq: 'monthly', priority: '0.6' },
            { url: '/contact', lastmod: new Date().toISOString(), changefreq: 'monthly', priority: '0.6' }
        );

        showNotification('‚úÖ ‡πÇ‡∏´‡∏•‡∏î sitemap ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        // Show sitemap
        showReusableModal('sitemapModal', `
            <div>
                <h4>Sitemap (${sitemapEntries.length} ‡∏´‡∏ô‡πâ‡∏≤)</h4>
                <div style="max-height: 400px; overflow-y: auto;">
                    <table style="width: 100%; border-collapse: collapse;">
                        <thead>
                            <tr>
                                <th style="border: 1px solid #ddd; padding: 8px;">URL</th>
                                <th style="border: 1px solid #ddd; padding: 8px;">Last Modified</th>
                                <th style="border: 1px solid #ddd; padding: 8px;">Priority</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${sitemapEntries.map(entry => `
                                <tr>
                                    <td style="border: 1px solid #ddd; padding: 8px;">${entry.url}</td>
                                    <td style="border: 1px solid #ddd; padding: 8px;">${new Date(entry.lastmod).toLocaleDateString()}</td>
                                    <td style="border: 1px solid #ddd; padding: 8px;">${entry.priority}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
            </div>
        `, '<i class="fas fa-sitemap"></i> Sitemap');

    } catch (error) {
        console.error('Error viewing sitemap:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î sitemap', 'error');
    }
}

/**
 * Analyze backlinks
 */
export async function analyzeBacklinks() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå backlinks...', 'info');
        
        // Simulate backlink analysis
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        const mockBacklinks = [
            { domain: 'example.com', url: 'https://example.com/link1', authority: 85, anchor: '‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å' },
            { domain: 'blog.example.org', url: 'https://blog.example.org/article', authority: 72, anchor: '‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ ‡πÜ' },
            { domain: 'news.site.com', url: 'https://news.site.com/story', authority: 68, anchor: '‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡πà‡∏≠' }
        ];

        showNotification('‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå backlinks ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        showReusableModal('backlinksModal', `
            <div>
                <h4>‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Backlinks</h4>
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô backlinks:</strong> ${mockBacklinks.length}</p>
                <p><strong>Domain Authority ‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢:</strong> ${Math.round(mockBacklinks.reduce((sum, link) => sum + link.authority, 0) / mockBacklinks.length)}</p>
                
                <h5>Backlinks ‡∏ó‡∏µ‡πà‡∏û‡∏ö:</h5>
                <div style="max-height: 300px; overflow-y: auto;">
                    ${mockBacklinks.map(link => `
                        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px 0; border-radius: 4px;">
                            <div><strong>Domain:</strong> ${link.domain} (DA: ${link.authority})</div>
                            <div><strong>URL:</strong> <a href="${link.url}" target="_blank">${link.url}</a></div>
                            <div><strong>Anchor Text:</strong> ${link.anchor}</div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `, '<i class="fas fa-link"></i> Backlinks Analysis');

    } catch (error) {
        console.error('Error analyzing backlinks:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå backlinks', 'error');
    }
}

/**
 * Generate backlinks suggestions
 */
export async function generateBacklinks() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ backlinks...', 'info');
        
        await new Promise(resolve => setTimeout(resolve, 1200));
        
        const suggestions = [
            { type: 'Guest Post', site: 'techblog.com', authority: 78, difficulty: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' },
            { type: 'Resource Page', site: 'resources.net', authority: 65, difficulty: '‡∏á‡πà‡∏≤‡∏¢' },
            { type: 'Broken Link Building', site: 'oldsite.org', authority: 82, difficulty: '‡∏¢‡∏≤‡∏Å' },
            { type: 'Directory Submission', site: 'directory.info', authority: 45, difficulty: '‡∏á‡πà‡∏≤‡∏¢' }
        ];

        showNotification('‚úÖ ‡∏´‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ backlinks ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        showReusableModal('backlinkSuggestionsModal', `
            <div>
                <h4>‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏£‡πâ‡∏≤‡∏á Backlinks</h4>
                <p>‡∏û‡∏ö‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ ${suggestions.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                
                ${suggestions.map(suggestion => `
                    <div style="border: 1px solid #ddd; padding: 10px; margin: 10px 0; border-radius: 4px;">
                        <div><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> ${suggestion.type}</div>
                        <div><strong>‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå:</strong> ${suggestion.site}</div>
                        <div><strong>Authority:</strong> ${suggestion.authority}</div>
                        <div><strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å:</strong> ${suggestion.difficulty}</div>
                    </div>
                `).join('')}
                
                <div style="margin-top: 20px;">
                    <h5>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:</h5>
                    <ol>
                        <li>‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</li>
                        <li>‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û</li>
                        <li>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß</li>
                    </ol>
                </div>
            </div>
        `, '<i class="fas fa-external-link-alt"></i> Backlink Opportunities');

    } catch (error) {
        console.error('Error generating backlinks:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ backlinks', 'error');
    }
}

/**
 * Generate schema markup
 */
export async function generateSchema() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Schema Markup...', 'info');
          const postId = document.getElementById('postSelectForSeo')?.value;
        if (!postId) {
            showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Schema', 'error');
            return;
        }

        const post = posts.find(p => {
            return p.id == postId || 
                   p._id == postId || 
                   p.postId == postId || 
                   p.slug == postId ||
                   String(p.id) === String(postId);
        });
        if (!post) {
            showNotification('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å', 'error');
            return;
        }

        // Generate schema for article
        const schema = {
            "@context": "https://schema.org",
            "@type": "Article",
            "headline": post.title,
            "description": post.metaDescription || post.excerpt || '',
            "author": {
                "@type": "Person",
                "name": post.author || "‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô"
            },
            "datePublished": post.createdAt || new Date().toISOString(),
            "dateModified": post.updatedAt || post.createdAt || new Date().toISOString(),
            "image": post.featuredImage || '',
            "publisher": {
                "@type": "Organization",
                "name": "Your Website",
                "logo": {
                    "@type": "ImageObject",
                    "url": "/logo.png"
                }
            }
        };

        showNotification('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Schema Markup ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        showReusableModal('schemaModal', `
            <div>
                <h4>Schema Markup ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${post.title}</h4>
                <p>‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÑ‡∏õ‡πÉ‡∏™‡πà‡πÉ‡∏ô &lt;head&gt; ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö</p>
                <textarea style="width: 100%; height: 300px; font-family: monospace; font-size: 12px;" readonly>
&lt;script type="application/ld+json"&gt;
${JSON.stringify(schema, null, 2)}
&lt;/script&gt;</textarea>
                <button class="btn btn-primary" onclick="copyToClipboard(this.previousElementSibling.value)" style="margin-top: 10px;">
                    <i class="fas fa-copy"></i> ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
                </button>
            </div>
        `, '<i class="fas fa-code"></i> Schema Markup');

    } catch (error) {
        console.error('Error generating schema:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Schema', 'error');
    }
}

/**
 * Auto-generate schema markup
 */
export async function autoGenerateSchema() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Schema ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...', 'info');
        
        // Generate schema for all posts
        const schemas = posts.map(post => ({
            id: post.id,
            title: post.title,
            schema: {
                "@context": "https://schema.org",
                "@type": "Article",
                "headline": post.title,
                "description": post.metaDescription || post.excerpt || '',
                "author": {
                    "@type": "Person",
                    "name": post.author || "‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô"
                },
                "datePublished": post.createdAt || new Date().toISOString(),
                "dateModified": post.updatedAt || post.createdAt || new Date().toISOString()
            }
        }));

        showNotification('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Schema ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        showReusableModal('autoSchemaModal', `
            <div>
                <h4>Schema Markup ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</h4>
                <p>‡∏™‡∏£‡πâ‡∏≤‡∏á Schema ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${schemas.length} ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°</p>
                <div style="max-height: 400px; overflow-y: auto;">
                    ${schemas.map(item => `
                        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px 0; border-radius: 4px;">
                            <strong>${item.title}</strong>
                            <br>
                            <small>Schema Type: Article</small>
                        </div>
                    `).join('')}
                </div>
                <p style="margin-top: 15px;">
                    <small>Schema Markup ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß</small>
                </p>
            </div>
        `, '<i class="fas fa-magic"></i> Auto Schema Generation');

    } catch (error) {
        console.error('Error auto-generating schema:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Schema ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥', 'error');
    }
}

/**
 * Check website performance
 */
export async function checkPerformance() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û...', 'info');
        
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        const metrics = {
            pageSpeed: Math.floor(Math.random() * 20) + 80, // 80-100
            firstContentfulPaint: (Math.random() * 0.5 + 1.0).toFixed(1), // 1.0-1.5s
            largestContentfulPaint: (Math.random() * 0.8 + 1.5).toFixed(1), // 1.5-2.3s
            cumulativeLayoutShift: (Math.random() * 0.05).toFixed(3), // 0.000-0.050
            firstInputDelay: Math.floor(Math.random() * 50 + 50), // 50-100ms
            timeToInteractive: (Math.random() * 1.0 + 2.0).toFixed(1) // 2.0-3.0s
        };

        showNotification('‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        showReusableModal('performanceModal', `
            <div>
                <h4>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</h4>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin: 20px 0;">
                    <div style="padding: 15px; border: 1px solid #ddd; border-radius: 8px; text-align: center;">
                        <h5>Page Speed Score</h5>
                        <div style="font-size: 24px; font-weight: bold; color: ${metrics.pageSpeed >= 90 ? '#28a745' : metrics.pageSpeed >= 70 ? '#ffc107' : '#dc3545'};">
                            ${metrics.pageSpeed}/100
                        </div>
                    </div>
                    
                    <div style="padding: 15px; border: 1px solid #ddd; border-radius: 8px; text-align: center;">
                        <h5>First Contentful Paint</h5>
                        <div style="font-size: 18px; font-weight: bold;">
                            ${metrics.firstContentfulPaint}s
                        </div>
                    </div>
                    
                    <div style="padding: 15px; border: 1px solid #ddd; border-radius: 8px; text-align: center;">
                        <h5>Largest Contentful Paint</h5>
                        <div style="font-size: 18px; font-weight: bold;">
                            ${metrics.largestContentfulPaint}s
                        </div>
                    </div>
                    
                    <div style="padding: 15px; border: 1px solid #ddd; border-radius: 8px; text-align: center;">
                        <h5>Cumulative Layout Shift</h5>
                        <div style="font-size: 18px; font-weight: bold;">
                            ${metrics.cumulativeLayoutShift}
                        </div>
                    </div>
                    
                    <div style="padding: 15px; border: 1px solid #ddd; border-radius: 8px; text-align: center;">
                        <h5>First Input Delay</h5>
                        <div style="font-size: 18px; font-weight: bold;">
                            ${metrics.firstInputDelay}ms
                        </div>
                    </div>
                    
                    <div style="padding: 15px; border: 1px solid #ddd; border-radius: 8px; text-align: center;">
                        <h5>Time to Interactive</h5>
                        <div style="font-size: 18px; font-weight: bold;">
                            ${metrics.timeToInteractive}s
                        </div>
                    </div>
                </div>
                
                <div style="margin-top: 20px;">
                    <h5>‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏∞‡πÅ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:</h5>
                    <ul>
                        <li>‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</li>
                        <li>‡∏•‡∏î JavaScript ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</li>
                        <li>‡πÉ‡∏ä‡πâ CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö static files</li>
                        <li>‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ browser caching</li>
                    </ul>
                </div>
            </div>
        `, '<i class="fas fa-tachometer-alt"></i> Performance Report');

    } catch (error) {
        console.error('Error checking performance:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û', 'error');
    }
}

/**
 * Get Flash optimization tips
 */
export function getFlashTips() {
    const tips = [
        { category: '‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤', tip: '‡πÉ‡∏ä‡πâ keywords ‡πÉ‡∏ô‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢', priority: '‡∏™‡∏π‡∏á' },
        { category: '‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ', tip: '‡πÄ‡∏û‡∏¥‡πà‡∏° alt text ‡πÉ‡∏´‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏∏‡∏Å‡∏£‡∏π‡∏õ', priority: '‡∏™‡∏π‡∏á' },
        { category: '‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û', tip: '‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ WebP format', priority: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' },
        { category: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á', tip: '‡πÉ‡∏ä‡πâ heading tags (H1-H6) ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', priority: '‡∏™‡∏π‡∏á' },
        { category: '‡∏•‡∏¥‡∏á‡∏Å‡πå', tip: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á', priority: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' },
        { category: 'Schema', tip: '‡πÄ‡∏û‡∏¥‡πà‡∏° structured data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö rich snippets', priority: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' }
    ];

    showReusableModal('flashTipsModal', `
        <div>
            <h4>Flash Optimization Tips</h4>
            <p>‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á SEO</p>
            
            ${tips.map(tip => `
                <div style="border: 1px solid #ddd; padding: 15px; margin: 10px 0; border-radius: 8px; border-left: 4px solid ${tip.priority === '‡∏™‡∏π‡∏á' ? '#dc3545' : tip.priority === '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' ? '#ffc107' : '#28a745'};">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">
                        <strong>${tip.category}</strong>
                        <span style="background: ${tip.priority === '‡∏™‡∏π‡∏á' ? '#dc3545' : tip.priority === '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' ? '#ffc107' : '#28a745'}; color: white; padding: 2px 8px; border-radius: 12px; font-size: 12px;">
                            ${tip.priority}
                        </span>
                    </div>
                    <div>${tip.tip}</div>
                </div>
            `).join('')}
            
            <div style="margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 8px;">
                <h5><i class="fas fa-lightbulb"></i> Pro Tip:</h5>
                <p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏™‡∏π‡∏á‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</p>
            </div>
        </div>
    `, '<i class="fas fa-bolt"></i> Flash Tips');
}

/**
 * Flash keyword research
 */
export async function flashKeywordResearch() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡∏à‡∏±‡∏¢ keywords...', 'info');
        
        const keyword = document.getElementById('keywordInput')?.value.trim();
        if (!keyword) {
            showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà keyword ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢', 'error');
            return;
        }
        
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        const keywordData = {
            main: keyword,
            volume: Math.floor(Math.random() * 10000) + 1000,
            difficulty: Math.floor(Math.random() * 100) + 1,
            related: [
                `${keyword} ‡πÉ‡∏´‡∏°‡πà`,
                `${keyword} 2024`,
                `‡∏ß‡∏¥‡∏ò‡∏µ ${keyword}`,
                `${keyword} ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£`,
                `‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ${keyword}`
            ],
            longtail: [
                `${keyword} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà`,
                `‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ${keyword} ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£`,
                `${keyword} vs ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∑‡πà‡∏ô`,
                `‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° ${keyword} ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï`
            ]
        };

        showNotification('‚úÖ ‡∏ß‡∏¥‡∏à‡∏±‡∏¢ keywords ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        showReusableModal('keywordResearchModal', `
            <div>
                <h4>Flash Keyword Research: "${keyword}"</h4>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 15px; margin: 20px 0;">
                    <div style="text-align: center; padding: 15px; border: 1px solid #ddd; border-radius: 8px;">
                        <h5>Search Volume</h5>
                        <div style="font-size: 24px; font-weight: bold; color: #007bff;">
                            ${keywordData.volume.toLocaleString()}
                        </div>
                        <small>‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</small>
                    </div>
                    
                    <div style="text-align: center; padding: 15px; border: 1px solid #ddd; border-radius: 8px;">
                        <h5>Keyword Difficulty</h5>
                        <div style="font-size: 24px; font-weight: bold; color: ${keywordData.difficulty < 30 ? '#28a745' : keywordData.difficulty < 70 ? '#ffc107' : '#dc3545'};">
                            ${keywordData.difficulty}%
                        </div>
                        <small>${keywordData.difficulty < 30 ? '‡∏á‡πà‡∏≤‡∏¢' : keywordData.difficulty < 70 ? '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' : '‡∏¢‡∏≤‡∏Å'}</small>
                    </div>
                    
                    <div style="text-align: center; padding: 15px; border: 1px solid #ddd; border-radius: 8px;">
                        <h5>Opportunity Score</h5>
                        <div style="font-size: 24px; font-weight: bold; color: #17a2b8;">
                            ${Math.floor(100 - keywordData.difficulty + (keywordData.volume / 100))}
                        </div>
                        <small>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</small>
                    </div>
                </div>
                
                <div style="margin: 20px 0;">
                    <h5>Related Keywords:</h5>
                    <div style="display: flex; flex-wrap: wrap; gap: 8px;">
                        ${keywordData.related.map(kw => `
                            <span style="background: #e7f3ff; color: #0066cc; padding: 5px 10px; border-radius: 15px; font-size: 14px;">
                                ${kw}
                            </span>
                        `).join('')}
                    </div>
                </div>
                
                <div style="margin: 20px 0;">
                    <h5>Long-tail Keywords:</h5>
                    <div style="display: flex; flex-wrap: wrap; gap: 8px;">
                        ${keywordData.longtail.map(kw => `
                            <span style="background: #f0f8f0; color: #006600; padding: 5px 10px; border-radius: 15px; font-size: 14px;">
                                ${kw}
                            </span>
                        `).join('')}
                    </div>
                </div>
            </div>
        `, '<i class="fas fa-search"></i> Keyword Research');

    } catch (error) {
        console.error('Error in flash keyword research:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢ keywords', 'error');
    }
}

/**
 * Show keyword trends
 */
export async function showKeywordTrends() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° keywords...', 'info');
        
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        const trendingKeywords = [
            { keyword: 'AI ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô', trend: '+125%', category: '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ' },
            { keyword: 'SEO 2024', trend: '+89%', category: '‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î' },
            { keyword: 'Web3 ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£', trend: '+67%', category: '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ' },
            { keyword: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ AI', trend: '+156%', category: '‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤' },
            { keyword: 'ChatGPT ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', trend: '+234%', category: 'AI' }
        ];

        showNotification('‚úÖ ‡∏î‡∏π‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° keywords ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 'success');
        
        showReusableModal('keywordTrendsModal', `
            <div>
                <h4>Keyword Trends ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Æ‡∏¥‡∏ï</h4>
                <p>Keywords ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 30 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤</p>
                
                ${trendingKeywords.map((item, index) => `
                    <div style="display: flex; justify-content: space-between; align-items: center; padding: 15px; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px; background: ${index % 2 === 0 ? '#f8f9fa' : '#ffffff'};">
                        <div>
                            <div style="font-weight: bold; font-size: 16px;">${item.keyword}</div>
                            <div style="color: #666; font-size: 14px;">${item.category}</div>
                        </div>
                        <div style="text-align: right;">
                            <div style="font-weight: bold; font-size: 18px; color: #28a745;">
                                ${item.trend}
                            </div>
                            <div style="color: #666; font-size: 12px;">‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï</div>
                        </div>
                    </div>
                `).join('')}
                
                <div style="margin-top: 20px; padding: 15px; background: #e7f3ff; border-radius: 8px;">
                    <h5><i class="fas fa-chart-line"></i> ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°:</h5>
                    <ul style="margin: 10px 0;">
                        <li>Keywords ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö AI ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°‡∏™‡∏π‡∏á</li>
                        <li>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÉ‡∏´‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô</li>
                        <li>SEO ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à</li>
                    </ul>
                </div>
            </div>
        `, '<i class="fas fa-trending-up"></i> Keyword Trends');

    } catch (error) {
        console.error('Error showing keyword trends:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°', 'error');
    }
}

/**
 * Connect to Google Search Console - Production Guide
 */
export async function connectSearchConsole() {
    try {
        showNotification('üìã ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Search Console', 'info');
        
        showReusableModal('searchConsoleGuideModal', `
            <div>
                <h4><i class="fas fa-search" style="color: #4285f4;"></i> ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Search Console</h4>
                <p style="margin-bottom: 20px;">‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏±‡∏ö Google Search Console</p>
                
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px; margin: 15px 0;">
                    <h5>üìå ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:</h5>
                    <ol style="margin: 10px 0 0 20px; line-height: 1.6;">
                        <li><strong>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà Google Search Console:</strong>
                            <br><a href="https://search.google.com/search-console" target="_blank" class="btn btn-sm btn-primary" style="margin: 5px 0;">
                                üîó ‡πÄ‡∏õ‡∏¥‡∏î Search Console
                            </a>
                        </li>
                        <li><strong>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô (Property):</strong>
                            <br>‚Ä¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô" ‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà URL ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
                            <br>‚Ä¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó "URL prefix" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
                        </li>
                        <li><strong>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á:</strong>
                            <br>‚Ä¢ HTML file upload (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
                            <br>‚Ä¢ HTML tag ‡πÉ‡∏ô &lt;head&gt; section
                            <br>‚Ä¢ Domain name provider
                            <br>‚Ä¢ Google Analytics (‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß)
                        </li>
                        <li><strong>‡∏™‡πà‡∏á Sitemap:</strong>
                            <br>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏ô‡∏π "Sitemaps"
                            <br>‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏° URL: <code>/sitemap.xml</code>
                        </li>
                    </ol>
                </div>

                <div style="background: #e7f3ff; padding: 15px; border-radius: 8px; margin: 15px 0;">
                    <h5><i class="fas fa-info-circle"></i> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:</h5>
                    <ul style="margin: 10px 0 0 20px;">
                        <li>üîç ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</li>
                        <li>üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</li>
                        <li>üêõ ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£ index ‡πÅ‡∏•‡∏∞ crawling errors</li>
                        <li>‚ö° ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Core Web Vitals ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û</li>
                        <li>üó∫Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Sitemap ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>
                        <li>üì± ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ (Mobile Usability)</li>
                    </ul>
                </div>

                <div style="background: #fff3cd; padding: 15px; border-radius: 8px; margin: 15px 0;">
                    <h5><i class="fas fa-clock"></i> ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:</h5>
                    <p style="margin: 5px 0;">‚Ä¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Google ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• (24-48 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)</p>
                    <p style="margin: 5px 0;">‚Ä¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà</p>
                    <p style="margin: 5px 0;">‚Ä¢ ‡∏Ñ‡∏ß‡∏£‡∏£‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</p>
                </div>

                <div style="text-align: center; margin-top: 20px;">
                    <a href="https://search.google.com/search-console/welcome" target="_blank" class="btn btn-success">
                        <i class="fas fa-rocket"></i> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Search Console
                    </a>
                </div>
            </div>
        `, '<i class="fas fa-search"></i> Google Search Console Setup');

    } catch (error) {
        console.error('Error showing Search Console guide:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠', 'error');
    }
}

/**
 * Connect to Google Analytics
 */
export async function connectAnalytics() {
    try {
        showNotification('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Analytics...', 'info');
        
        // Simulate connection process
        await new Promise(resolve => setTimeout(resolve, 1800));
        
        const isConnected = Math.random() > 0.2; // 80% success rate
        
        if (isConnected) {
            showNotification('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Analytics ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'success');
            
            // Update UI to show connected status
            const statusElement = document.querySelector('.analytics-status');
            if (statusElement) {
                statusElement.innerHTML = '<span style="color: #28a745;"><i class="fas fa-check-circle"></i> ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß</span>';
            }
            
            // Update analytics data on dashboard
            setTimeout(() => {
                const visitorsElement = document.getElementById('totalVisitors');
                const pageviewsElement = document.getElementById('totalPageviews');
                const bounceRateElement = document.getElementById('bounceRate');
                
                if (visitorsElement) visitorsElement.textContent = (Math.floor(Math.random() * 5000) + 1000).toLocaleString();
                if (pageviewsElement) pageviewsElement.textContent = (Math.floor(Math.random() * 15000) + 5000).toLocaleString();
                if (bounceRateElement) bounceRateElement.textContent = (Math.random() * 30 + 25).toFixed(1) + '%';
            }, 500);
            
            showReusableModal('analyticsModal', `
                <div>
                    <h4><i class="fas fa-check-circle" style="color: #28a745;"></i> ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h4>
                    <p>Google Analytics ‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß</p>
                    
                    <div style="margin: 20px 0;">
                        <h5>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ:</h5>
                        <ul>
                            <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</li>
                            <li>‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</li>
                            <li>‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á traffic</li>
                            <li>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£ bounce ‡πÅ‡∏•‡∏∞ conversion</li>
                            <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ real-time</li>
                        </ul>
                    </div>
                    
                    <div style="background: #e7f3ff; padding: 15px; border-radius: 8px;">
                        <p><strong>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó:</strong> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô dashboard ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 30 ‡∏ô‡∏≤‡∏ó‡∏µ</p>
                    </div>
                </div>
            `, '<i class="fas fa-chart-bar"></i> Google Analytics');
            
        } else {
            showNotification('‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Analytics ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'error');
            
            showReusableModal('analyticsErrorModal', `
                <div>
                    <h4><i class="fas fa-exclamation-triangle" style="color: #dc3545;"></i> ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h4>
                    <p>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google Analytics ‡πÑ‡∏î‡πâ</p>
                    
                    <div style="margin: 20px 0;">
                        <h5>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ:</h5>
                        <ul>
                            <li>Tracking ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>
                            <li>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Analytics property</li>
                            <li>API key ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>
                        </ul>
                    </div>
                    
                    <div style="margin: 20px 0;">
                        <h5>‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</h5>
                        <ol>
                            <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Google Analytics Tracking ID</li>
                            <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÉ‡∏ô Google Analytics</li>
                            <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó API credentials</li>
                            <li>‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</li>
                        </ol>
                    </div>
                </div>
            `, '<i class="fas fa-exclamation-triangle"></i> Connection Error');
        }

    } catch (error) {
        console.error('Error connecting to Analytics:', error);
        showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠', 'error');
    }
}

// ===== UTILITY FUNCTIONS =====

/**
 * Copy text to clipboard
 */
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        showNotification('‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á clipboard ‡πÅ‡∏•‡πâ‡∏ß', 'success');
    }).catch(err => {
        console.error('Error copying to clipboard:', err);
        showNotification('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏î‡πâ', 'error');
    });
}

/**
 * Close modal by ID
 */
// ‚úÖ REMOVED: Duplicate closeModal function - using modals.js implementation

// Make functions available globally for HTML onclick handlers
window.autoGenerateSEO = autoGenerateSEO;
window.runSEOCheck = runSEOCheck;
window.viewSEOReport = viewSEOReport;
window.viewSitemap = viewSitemap;
window.analyzeBacklinks = analyzeBacklinks;
window.generateBacklinks = generateBacklinks;
window.generateSchema = generateSchema;
window.autoGenerateSchema = autoGenerateSchema;
window.checkPerformance = checkPerformance;
window.getFlashTips = getFlashTips;
window.flashKeywordResearch = flashKeywordResearch;
window.showKeywordTrends = showKeywordTrends;
window.connectSearchConsole = connectSearchConsole;
window.connectAnalytics = connectAnalytics;
window.copyToClipboard = copyToClipboard;