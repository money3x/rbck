const ProviderFactory = require('../providers/factory/ProviderFactory');
const { getEnabledProviders } = require('../providers/config/providers.config');

class EATOptimizedSwarmCouncil {
    constructor(autoInit = false) {
        this.providers = {};
        this.eatRoles = {};
        this.seoGuidelines = {};
        this.eatGuidelines = {};
        this.isInitialized = false;
        this.initializationErrors = [];
        this.lastInitializationAttempt = null;
        
        // Only auto-initialize if explicitly requested
        if (autoInit) {
            console.log('üéØ [E-A-T Swarm] Auto-initialization requested');
            this.initializeEATSwarm();
        } else {
            console.log('üéØ [E-A-T Swarm] Created without auto-initialization');
        }
    }
    
    async initializeEATSwarm() {
        this.lastInitializationAttempt = new Date().toISOString();
        this.initializationErrors = [];
        
        try {
            console.log('üéØ [E-A-T Swarm] Initializing E-A-T Optimized Council...');
            
            const enabledProviders = getEnabledProviders();
            
            if (!enabledProviders || Object.keys(enabledProviders).length === 0) {
                throw new Error('No enabled providers found for E-A-T Swarm initialization');
            }
            
            // Sort providers by priority for E-A-T workflow
            const sortedProviders = Object.entries(enabledProviders)
                .sort(([,a], [,b]) => (a.priority || 999) - (b.priority || 999));
            
            let successfulInitializations = 0;
            const totalProviders = sortedProviders.length;
            
            for (const [providerName, config] of sortedProviders) {
                try {
                    console.log(`üîÑ [E-A-T Swarm] Initializing ${providerName} for E-A-T role...`);
                    
                    // Validate config
                    if (!config || !config.name) {
                        throw new Error(`Invalid E-A-T configuration for provider ${providerName}`);
                    }
                    
                    const provider = ProviderFactory.createProvider(providerName);
                    
                    if (!provider) {
                        throw new Error(`Failed to create E-A-T provider instance for ${providerName}`);
                    }
                    
                    // Set E-A-T specific role and capabilities with error handling
                    try {
                        if (typeof provider.setRole === 'function') {
                            provider.setRole(config.role || 'general');
                        }
                        if (typeof provider.setSpecialties === 'function') {
                            provider.setSpecialties(config.specialties || []);
                        }
                        if (typeof provider.setEATCapabilities === 'function') {
                            provider.setEATCapabilities(config.eatCapabilities || {});
                        }
                        if (typeof provider.setCouncilContext === 'function') {
                            provider.setCouncilContext(this);
                        }
                    } catch (setupError) {
                        console.warn(`‚ö†Ô∏è [E-A-T Swarm] Provider ${providerName} E-A-T setup incomplete:`, setupError.message);
                        // Continue with provider even if E-A-T setup fails
                    }
                    
                    this.providers[providerName] = provider;
                    if (config.role) {
                        this.eatRoles[config.role] = providerName;
                    }
                    
                    successfulInitializations++;
                    console.log(`‚úÖ [E-A-T Swarm] ${config.name} assigned as ${config.role || 'general'} (Priority: ${config.priority || 999}, ${successfulInitializations}/${totalProviders})`);
                    
                } catch (error) {
                    const errorDetails = {
                        provider: providerName,
                        error: error.message,
                        timestamp: new Date().toISOString(),
                        config: config ? config.name : 'Unknown',
                        eatRole: config?.role || 'Unknown'
                    };
                    
                    this.initializationErrors.push(errorDetails);
                    console.error(`‚ùå [E-A-T Swarm] Failed to initialize ${providerName}:`, error.message);
                    
                    if (process.env.NODE_ENV === 'development') {
                        console.error(`‚ùå [E-A-T Swarm] ${providerName} debug info:`, {
                            configExists: !!config,
                            eatCapabilities: config?.eatCapabilities,
                            errorStack: error.stack
                        });
                    }
                }
            }
            
            // Initialize guidelines regardless of provider failures
            try {
                this.initializeSEOGuidelines();
                this.initializeEATGuidelines();
                console.log('‚úÖ [E-A-T Swarm] E-A-T and SEO guidelines initialized');
            } catch (guidelineError) {
                console.warn('‚ö†Ô∏è [E-A-T Swarm] Guidelines initialization failed:', guidelineError.message);
                this.initializationErrors.push({
                    component: 'guidelines',
                    error: guidelineError.message,
                    timestamp: new Date().toISOString()
                });
            }
            
            // Determine initialization status
            if (successfulInitializations === 0) {
                this.isInitialized = false;
                const errorMsg = `No E-A-T providers could be initialized. Errors: ${this.initializationErrors.map(e => e.error).join(', ')}`;
                console.error(`‚ùå [E-A-T Swarm] Complete initialization failure:`, errorMsg);
                throw new Error(errorMsg);
            } else {
                this.isInitialized = true;
                if (successfulInitializations < totalProviders) {
                    console.warn(`‚ö†Ô∏è [E-A-T Swarm] Partial initialization: ${successfulInitializations}/${totalProviders} E-A-T specialists active`);
                } else {
                    console.log(`‚úÖ [E-A-T Swarm] Complete initialization: ${successfulInitializations}/${totalProviders} E-A-T specialists active`);
                }
            }
            
            console.log(`üéØ [E-A-T Swarm] Council ready with ${Object.keys(this.providers).length} E-A-T specialists`);
            
        } catch (error) {
            this.isInitialized = false;
            const finalError = {
                component: 'E-A-T SwarmCouncil',
                error: error.message,
                timestamp: new Date().toISOString(),
                providerErrors: this.initializationErrors
            };
            
            this.initializationErrors.push(finalError);
            console.error('‚ùå [E-A-T Swarm] Fatal initialization error:', error.message);
            console.error('‚ùå [E-A-T Swarm] All errors:', this.initializationErrors);
        }
    }
    
    initializeSEOGuidelines() {
        this.seoGuidelines = {
            title: {
                minLength: 30,
                maxLength: 60,
                includeKeyword: true,
                compelling: true
            },
            metaDescription: {
                minLength: 120,
                maxLength: 160,
                includeKeyword: true,
                callToAction: true
            },
            headings: {
                h1: { count: 1, includeKeyword: true },
                h2: { minCount: 2, includeVariations: true },
                h3: { optimal: true, structured: true }
            },
            content: {
                minWords: 800,
                keywordDensity: { min: 0.5, max: 2.5 },
                readabilityScore: { min: 60 },
                internalLinks: { min: 2 },
                externalLinks: { min: 1 }
            },
            schema: {
                article: true,
                breadcrumbs: true,
                faq: 'conditional',
                organization: true
            }
        };
    }
    
    initializeEATGuidelines() {
        this.eatGuidelines = {
            expertise: {
                requirements: [
                    '‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
                    '‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠',
                    '‡πÉ‡∏ä‡πâ‡∏®‡∏±‡∏û‡∏ó‡πå‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°',
                    '‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏ì‡∏µ‡∏®‡∏∂‡∏Å‡∏©‡∏≤'
                ],
                indicators: ['technical terms', 'detailed analysis', 'case studies', 'professional insights']
            },
            experience: {
                requirements: [
                    '‡πÅ‡∏ä‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏£‡∏¥‡∏á',
                    '‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏ä‡∏¥‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥',
                    '‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏£‡∏¥‡∏á',
                    '‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå'
                ],
                indicators: ['personal experience', 'practical advice', 'real results', 'hands-on knowledge']
            },
            authoritativeness: {
                requirements: [
                    '‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠',
                    '‡πÉ‡∏ä‡πâ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥',
                    '‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå',
                    '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÅ‡∏•‡∏∞‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î'
                ],
                indicators: ['credible sources', 'statistics', 'expert analysis', 'comprehensive coverage']
            },
            trustworthiness: {
                requirements: [
                    '‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ',
                    '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤',
                    '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
                    '‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™‡πÅ‡∏•‡∏∞‡∏ã‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏¢‡πå'
                ],
                indicators: ['verifiable information', 'transparent sources', 'up-to-date content', 'honest assessment']
            }
        };
    }
    
    async createEATOptimizedContent(prompt, targetKeyword, contentType = 'article') {
        if (!this.isInitialized) {
            throw new Error('E-A-T Swarm Council not properly initialized');
        }
        
        console.log(`üéØ [E-A-T Swarm] Creating E-A-T optimized content for keyword: "${targetKeyword}"`);
        
        const eatPipeline = {
            originalPrompt: prompt,
            targetKeyword: targetKeyword,
            contentType: contentType,
            eatSteps: [],
            seoAnalysis: {},
            eatCompliance: {},
            finalContent: {},
            metadata: {
                timestamp: new Date().toISOString(),
                workflowType: 'eat-optimized',
                participatingProviders: Object.keys(this.providers)
            }
        };
        
        try {
            // Step 1: Claude - Chief E-A-T Content Creation
            if (this.providers.claude) {
                console.log('üèÜ [E-A-T] Step 1: Chief E-A-T Content Specialist (Claude)');
                const eatPrompt = this.buildAdvancedEATPrompt(prompt, targetKeyword);
                const eatContent = await this.providers.claude.generateContent(eatPrompt);
                
                eatPipeline.eatSteps.push({
                    step: 1,
                    role: 'Chief E-E-A-T Content Specialist',
                    provider: 'claude',
                    focus: 'Trustworthiness, Experience Integration, Factual Accuracy',
                    output: eatContent,
                    eatContribution: ['trustworthiness', 'experience', 'accuracy'],
                    timestamp: new Date().toISOString()
                });
                eatPipeline.finalContent.body = eatContent;
            }
            
            // Step 2: OpenAI - Authority & SEO Structure
            if (this.providers.openai && eatPipeline.finalContent.body) {
                console.log('üìö [E-A-T] Step 2: Authority & SEO Structure Optimizer (OpenAI)');
                const authorityPrompt = this.buildAuthorityAndSEOPrompt(eatPipeline.finalContent.body, targetKeyword);
                const authorityEnhanced = await this.providers.openai.generateContent(authorityPrompt);
                
                // Parse structured output
                const seoStructure = this.parseSEOStructure(authorityEnhanced);
                
                eatPipeline.eatSteps.push({
                    step: 2,
                    role: 'Authority & SEO Structure Optimizer',
                    provider: 'openai',
                    focus: 'Authoritativeness, SEO Structure, Meta Optimization',
                    output: seoStructure,
                    eatContribution: ['authoritativeness', 'seo_structure', 'meta_optimization'],
                    timestamp: new Date().toISOString()
                });
                
                eatPipeline.finalContent = { ...eatPipeline.finalContent, ...seoStructure };
            }
            
            // Step 3: DeepSeek - Technical Expertise Validation
            if (this.providers.deepseek && eatPipeline.finalContent.body) {
                console.log('üî¨ [E-A-T] Step 3: Technical Expertise Validator (DeepSeek)');
                const expertisePrompt = this.buildExpertiseValidationPrompt(eatPipeline.finalContent.body, targetKeyword);
                const expertiseValidated = await this.providers.deepseek.generateContent(expertisePrompt);
                
                eatPipeline.eatSteps.push({
                    step: 3,
                    role: 'Technical Expertise Validator',
                    provider: 'deepseek',
                    focus: 'Technical Accuracy, Expertise Validation, Schema Markup',
                    output: expertiseValidated,
                    eatContribution: ['expertise', 'technical_accuracy', 'schema_markup'],
                    timestamp: new Date().toISOString()
                });
                
                eatPipeline.finalContent.body = expertiseValidated;
                eatPipeline.finalContent.schemaMarkup = this.generateSchemaMarkup(eatPipeline.finalContent, contentType);
            }
            
            // Step 4: Gemini - Content Comprehensiveness (Limited Role)
            if (this.providers.gemini && eatPipeline.finalContent.body) {
                console.log('üìù [E-A-T] Step 4: Content Comprehensiveness Enhancer (Gemini)');
                const comprehensivePrompt = this.buildComprehensivenessPrompt(eatPipeline.finalContent.body, targetKeyword);
                const comprehensive = await this.providers.gemini.generateContent(comprehensivePrompt);
                
                eatPipeline.eatSteps.push({
                    step: 4,
                    role: 'Content Comprehensiveness Enhancer',
                    provider: 'gemini',
                    focus: 'Content Breadth, Comprehensive Coverage, User Engagement',
                    output: comprehensive,
                    eatContribution: ['comprehensiveness', 'coverage', 'engagement'],
                    timestamp: new Date().toISOString()
                });
                
                eatPipeline.finalContent.body = comprehensive;
            }
            
            // Step 5: ChindaX - Local Authority & Cultural Context
            if (this.providers.chinda && eatPipeline.finalContent.body) {
                console.log('üáπüá≠ [E-A-T] Step 5: Local Authority & Cultural Expert (ChindaX)');
                const localAuthorityPrompt = this.buildLocalAuthorityPrompt(eatPipeline.finalContent.body, targetKeyword);
                const localAuthority = await this.providers.chinda.generateContent(localAuthorityPrompt);
                
                eatPipeline.eatSteps.push({
                    step: 5,
                    role: 'Local Authority & Cultural Expert',
                    provider: 'chinda',
                    focus: 'Local Expertise, Cultural Authority, Thai Context',
                    output: localAuthority,
                    eatContribution: ['local_expertise', 'cultural_authority', 'thai_context'],
                    timestamp: new Date().toISOString()
                });
                
                eatPipeline.finalContent.body = localAuthority;
            }
            
            // Final Analysis & Scoring
            eatPipeline.eatCompliance = this.analyzeEATCompliance(eatPipeline.finalContent);
            eatPipeline.seoAnalysis = this.analyzeSEOCompliance(eatPipeline.finalContent, targetKeyword);
            eatPipeline.overallScore = this.calculateOverallScore(eatPipeline);
            
            console.log(`‚úÖ [E-A-T Swarm] Content creation completed!`);
            console.log(`   üìä E-A-T Score: ${eatPipeline.eatCompliance.overall}/100`);
            console.log(`   üîç SEO Score: ${eatPipeline.seoAnalysis.score}/100`);
            console.log(`   üèÜ Overall Score: ${eatPipeline.overallScore}/100`);
            
            eatPipeline.status = 'completed';
            return eatPipeline;
            
        } catch (error) {
            console.error('‚ùå [E-A-T Swarm] Error:', error);
            eatPipeline.error = error.message;
            eatPipeline.status = 'failed';
            return eatPipeline;
        }
    }
    
    buildAdvancedEATPrompt(prompt, keyword) {
        return `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Chief E-E-A-T Content Specialist ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û

üìù **CONTENT REQUEST:**
‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: "${prompt}"
Target Keyword: "${keyword}"

üéØ **E-E-A-T OPTIMIZATION REQUIREMENTS:**

üî¨ **EXPERTISE (‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç) - ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ 90/100:**
- ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
- ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç
- ‡πÉ‡∏ä‡πâ‡∏®‡∏±‡∏û‡∏ó‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
- ‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞ insights ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á

üë§ **EXPERIENCE (‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå) - ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ 85/100:**
- ‡∏£‡∏ß‡∏° first-hand experience ‡πÅ‡∏•‡∏∞ practical insights
- ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏£‡∏¥‡∏á
- ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡∏£‡∏á
- ‡πÅ‡∏ä‡∏£‡πå lessons learned ‡πÅ‡∏•‡∏∞ real-world applications

üèÜ **AUTHORITATIVENESS (‡∏≠‡∏≥‡∏ô‡∏≤‡∏à) - ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ 88/100:**
- ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ
- ‡πÉ‡∏ä‡πâ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥
- ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô thought leader ‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ
- ‡∏™‡∏£‡πâ‡∏≤‡∏á authoritative tone ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°

‚úÖ **TRUSTWORTHINESS (‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à) - ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ 95/100:**
- ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á
- ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤
- ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ã‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏¢‡πå

üìè **CONTENT SPECIFICATIONS:**
- ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1,200 ‡∏Ñ‡∏≥
- ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
- ‡πÉ‡∏ä‡πâ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö
- ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÉ‡∏ô professional CMS

‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û E-E-A-T ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö:
`;
    }
    
    buildAuthorityAndSEOPrompt(content, keyword) {
        return `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Authority & SEO Structure Optimizer ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° authoritativeness ‡πÅ‡∏•‡∏∞ SEO optimization

üìÑ **CONTENT TO ENHANCE:**
"${content.substring(0, 1000)}..."

üéØ **TARGET KEYWORD:** "${keyword}"

üîß **OPTIMIZATION TASKS:**

üìö **AUTHORITY BUILDING:**
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠
- ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏•‡∏Å, universities, research institutions
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ
- ‡∏™‡∏£‡πâ‡∏≤‡∏á expert positioning ‡πÅ‡∏•‡∏∞ thought leadership tone

üîç **SEO STRUCTURE OPTIMIZATION:**
- ‡∏™‡∏£‡πâ‡∏≤‡∏á compelling title (30-60 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£) ‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° target keyword
- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô meta description (120-160 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£) ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à
- ‡∏à‡∏±‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á H1, H2, H3 ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö SEO
- ‡∏õ‡∏£‡∏±‡∏ö keyword density ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 0.5-2.5%

üìä **STRUCTURED OUTPUT REQUIRED (JSON FORMAT):**
{
  "title": "SEO-optimized title with target keyword",
  "metaDescription": "Compelling meta description with keyword and CTA",
  "body": "Enhanced content with authority signals and SEO structure",
  "suggestedTags": ["tag1", "tag2", "tag3"],
  "internalLinks": ["suggested internal link topics"],
  "externalSources": ["credible external sources to reference"],
  "keywordVariations": ["semantic keywords and variations"],
  "featuredSnippet": "Content optimized for featured snippet"
}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏µ authority ‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞ SEO-ready ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏:
`;
    }
    
    buildExpertiseValidationPrompt(content, keyword) {
        return `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Technical Expertise Validator ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ

üìÑ **CONTENT TO VALIDATE:**
"${content.substring(0, 1000)}..."

üéØ **TARGET KEYWORD:** "${keyword}"

üî¨ **VALIDATION & ENHANCEMENT TASKS:**

‚úÖ **TECHNICAL ACCURACY CHECK:**
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ
- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
- ‡πÉ‡∏ä‡πâ‡∏®‡∏±‡∏û‡∏ó‡πå‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°

üß† **EXPERTISE ENHANCEMENT:**
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
- ‡πÉ‡∏™‡πà technical insights ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤
- ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
- ‡πÄ‡∏û‡∏¥‡πà‡∏° expert-level perspectives

üìê **DEPTH ANALYSIS:**
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÅ‡∏•‡∏∞ critical thinking
- ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô
- ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÅ‡∏•‡∏∞‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
- ‡∏™‡∏£‡πâ‡∏≤‡∏á comprehensive coverage ‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô:
`;
    }
    
    buildComprehensivenessPrompt(content, keyword) {
        return `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Content Comprehensiveness Enhancer ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°

üìÑ **CONTENT TO ENHANCE:**
"${content.substring(0, 1000)}..."

üéØ **TARGET KEYWORD:** "${keyword}"

üìà **ENHANCEMENT TASKS:**

üìö **CONTENT BREADTH EXPANSION:**
- ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏á‡πà‡∏°‡∏∏‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢
- ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
- ‡∏™‡∏£‡πâ‡∏≤‡∏á comprehensive coverage ‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠

üéØ **USER ENGAGEMENT IMPROVEMENT:**
- ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
- ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡πà‡∏≤‡∏ô

üìä **COMPREHENSIVE COVERAGE:**
- ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
- ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≤‡∏à‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡πà‡∏≠
- ‡∏™‡∏£‡πâ‡∏≤‡∏á one-stop resource ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ

‚ö†Ô∏è **CAUTION:** 
- ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠ misleading
- ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°
- ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡πà‡∏≤‡∏ô

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ç‡∏¢‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÅ‡∏•‡∏∞‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏¢‡∏¥‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô:
`;
    }
    
    buildLocalAuthorityPrompt(content, keyword) {
        return `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Local Authority & Cultural Expert ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡πÑ‡∏ó‡∏¢

üìÑ **CONTENT TO LOCALIZE:**
"${content.substring(0, 1000)}..."

üéØ **TARGET KEYWORD:** "${keyword}"

üáπüá≠ **LOCALIZATION & AUTHORITY TASKS:**

üèõÔ∏è **LOCAL EXPERTISE ENHANCEMENT:**
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢
- ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏ì‡∏µ‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡πÑ‡∏ó‡∏¢
- ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ
- ‡πÄ‡∏û‡∏¥‡πà‡∏° local insights ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô

üé≠ **CULTURAL AUTHORITY:**
- ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡πÑ‡∏ó‡∏¢
- ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡πÑ‡∏•‡∏ü‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ñ‡∏ô‡πÑ‡∏ó‡∏¢
- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡πÑ‡∏ó‡∏¢

üîç **THAI CONTEXT OPTIMIZATION:**
- ‡∏õ‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥
- ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏ô‡πÑ‡∏ó‡∏¢‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡πÑ‡∏ó‡∏¢
- ‡∏™‡∏£‡πâ‡∏≤‡∏á local relevance ‡πÅ‡∏•‡∏∞ relatability

üéØ **LOCAL SEO ENHANCEMENT:**
- ‡πÄ‡∏û‡∏¥‡πà‡∏° local keywords ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö local search intent
- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö "‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢"
- ‡∏™‡∏£‡πâ‡∏≤‡∏á content ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö local featured snippets

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏µ local authority ‡πÅ‡∏•‡∏∞ cultural relevance ‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô:
`;
    }
    
    // Utility methods for analysis and parsing
    parseSEOStructure(seoContent) {
        try {
            // Try to parse as JSON first
            return JSON.parse(seoContent);
        } catch (error) {
            // Fallback parsing if JSON fails
            console.warn('‚ö†Ô∏è [E-A-T] JSON parsing failed, using fallback parser');
            return {
                title: this.extractTitle(seoContent) || 'Generated Title',
                metaDescription: this.extractMetaDescription(seoContent) || 'Generated meta description',
                body: seoContent,
                suggestedTags: [],
                internalLinks: [],
                externalSources: [],
                keywordVariations: [],
                featuredSnippet: this.extractFeaturedSnippet(seoContent) || ''
            };
        }
    }
    
    generateSchemaMarkup(content, contentType) {
        const schema = {
            "@context": "https://schema.org",
            "@type": contentType === 'article' ? "Article" : "BlogPosting",
            "headline": content.title || "Untitled",
            "description": content.metaDescription || "",
            "datePublished": new Date().toISOString(),
            "dateModified": new Date().toISOString(),
            "author": {
                "@type": "Organization",
                "name": "RBCK CMS",
                "url": "https://rbck-cms.render.com"
            },
            "publisher": {
                "@type": "Organization",
                "name": "RBCK CMS",
                "url": "https://rbck-cms.render.com"
            },
            "mainEntityOfPage": {
                "@type": "WebPage",
                "@id": "https://rbck-cms.render.com"
            }
        };
        
        if (content.featuredSnippet) {
            schema.abstract = content.featuredSnippet;
        }
        
        return JSON.stringify(schema, null, 2);
    }
    
    analyzeEATCompliance(content) {
        const compliance = {
            expertise: 0,
            experience: 0,
            authoritativeness: 0,
            trustworthiness: 0,
            overall: 0,
            details: {}
        };
        
        const contentText = (content.body || '').toLowerCase();
        
        // Expertise Analysis
        const expertiseIndicators = ['‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', '‡∏®‡∏∂‡∏Å‡∏©‡∏≤', '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£', '‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ', '‡∏ú‡∏•‡∏Å‡∏≤‡∏£'];
        const expertiseScore = this.calculateIndicatorScore(contentText, expertiseIndicators);
        compliance.expertise = Math.min(expertiseScore, 100);
        
        // Experience Analysis
        const experienceIndicators = ['‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå', '‡πÑ‡∏î‡πâ‡∏•‡∏≠‡∏á', '‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥', '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', '‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå'];
        const experienceScore = this.calculateIndicatorScore(contentText, experienceIndicators);
        compliance.experience = Math.min(experienceScore, 100);
        
        // Authoritativeness Analysis
        const authorityIndicators = ['‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á', '‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤', '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥', '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤', '‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç'];
        const authorityScore = this.calculateIndicatorScore(contentText, authorityIndicators);
        compliance.authoritativeness = Math.min(authorityScore, 100);
        
        // Trustworthiness Analysis
        const trustIndicators = ['‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö', '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ', '‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™', '‡∏Ç‡πâ‡∏≠‡πÄ‡∏ó‡πá‡∏à‡∏à‡∏£‡∏¥‡∏á', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á'];
        const trustScore = this.calculateIndicatorScore(contentText, trustIndicators);
        compliance.trustworthiness = Math.min(trustScore, 100);
        
        // Overall Score
        compliance.overall = Math.round(
            (compliance.expertise + compliance.experience + compliance.authoritativeness + compliance.trustworthiness) / 4
        );
        
        return compliance;
    }
    
    analyzeSEOCompliance(content, keyword) {
        const analysis = {
            score: 0,
            details: {},
            recommendations: []
        };
        
        let score = 0;
        const keywordLower = keyword.toLowerCase();
        
        // Title Analysis (20 points)
        if (content.title) {
            if (content.title.length >= 30 && content.title.length <= 60) score += 10;
            if (content.title.toLowerCase().includes(keywordLower)) score += 10;
        }
        
        // Meta Description Analysis (15 points)
        if (content.metaDescription) {
            if (content.metaDescription.length >= 120 && content.metaDescription.length <= 160) score += 8;
            if (content.metaDescription.toLowerCase().includes(keywordLower)) score += 7;
        }
        
        // Content Analysis (35 points)
        if (content.body) {
            const wordCount = content.body.split(' ').length;
            if (wordCount >= 800) score += 15;
            else if (wordCount >= 500) score += 10;
            
            const keywordMatches = (content.body.toLowerCase().match(new RegExp(keywordLower, 'g')) || []).length;
            const keywordDensity = (keywordMatches / wordCount) * 100;
            if (keywordDensity >= 0.5 && keywordDensity <= 2.5) score += 20;
        }
        
        // Structure Analysis (15 points)
        if (content.body && (content.body.includes('#') || content.body.includes('<h'))) {
            score += 15;
        }
        
        // Additional Features (15 points)
        if (content.schemaMarkup) score += 5;
        if (content.suggestedTags && content.suggestedTags.length > 0) score += 5;
        if (content.internalLinks && content.internalLinks.length > 0) score += 5;
        
        analysis.score = Math.min(score, 100);
        return analysis;
    }
    
    calculateOverallScore(pipeline) {
        const eatWeight = 0.6;
        const seoWeight = 0.4;
        
        const eatScore = pipeline.eatCompliance?.overall || 0;
        const seoScore = pipeline.seoAnalysis?.score || 0;
        
        return Math.round((eatScore * eatWeight) + (seoScore * seoWeight));
    }
    
    calculateIndicatorScore(text, indicators) {
        let score = 0;
        indicators.forEach(indicator => {
            if (text.includes(indicator)) {
                score += 20;
            }
        });
        return score;
    }
    
    // Helper extraction methods
    extractTitle(content) {
        const titleMatch = content.match(/title['":\s]+([^'"\n]{10,60})/i);
        return titleMatch ? titleMatch[1].trim() : null;
    }
    
    extractMetaDescription(content) {
        const metaMatch = content.match(/meta[^:]*description['":\s]+([^'"\n]{50,160})/i);
        return metaMatch ? metaMatch[1].trim() : null;
    }
    
    extractFeaturedSnippet(content) {
        const snippetMatch = content.match(/snippet['":\s]+([^'"\n]{50,200})/i);
        return snippetMatch ? snippetMatch[1].trim() : null;
    }
    
    getCouncilStatus() {
        return {
            initialized: this.isInitialized,
            totalMembers: Object.keys(this.providers).length,
            eatSpecialists: this.eatRoles,
            capabilities: ['eat-optimized', 'seo-enhanced', 'authority-building', 'local-optimization'],
            guidelines: {
                seo: Object.keys(this.seoGuidelines).length,
                eat: Object.keys(this.eatGuidelines).length
            }
        };
    }
}

module.exports = EATOptimizedSwarmCouncil;
